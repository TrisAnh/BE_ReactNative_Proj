const mongoose = require("mongoose");
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");
const dotenv = require("dotenv");
const User = require("./models/User"); // ƒê∆∞·ªùng d·∫´n ƒë·∫øn model User c·ªßa b·∫°n
const { login } = require("./controllers/authController"); // ƒê∆∞·ªùng d·∫´n ƒë·∫øn file ch·ª©a h√†m login

dotenv.config(); // Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env

// K·∫øt n·ªëi MongoDB (ch·ªânh l·∫°i URI n·∫øu c·∫ßn)
mongoose
  .connect(process.env.MONGO_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(async () => {
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng!");

    // T·∫°o d·ªØ li·ªáu gi·∫£ ƒë·ªÉ ki·ªÉm tra
    const emailTest = "test@gmail.com";
    const passwordTest = "123456";

    // Ki·ªÉm tra xem user ƒë√£ t·ªìn t·∫°i ch∆∞a
    let user = await User.findOne({ email: emailTest });

    if (!user) {
      console.log("üîπ User ch∆∞a t·ªìn t·∫°i, t·∫°o m·ªõi...");
      const hashedPassword = await bcrypt.hash(passwordTest, 10);
      user = await User.create({ email: emailTest, password: hashedPassword });
    } else {
      console.log("üîπ User ƒë√£ t·ªìn t·∫°i, d√πng d·ªØ li·ªáu c≈©.");
    }

    // Gi·∫£ l·∫≠p request v√† response
    const req = { body: { email: emailTest, password: passwordTest } };
    const res = {
      status: (statusCode) => ({
        json: (data) => console.log(`üì© Response (${statusCode}):`, data),
      }),
      json: (data) => console.log("üì© Response:", data),
    };

    // G·ªçi h√†m login ƒë·ªÉ ki·ªÉm tra
    console.log("üöÄ Ki·ªÉm tra ƒëƒÉng nh·∫≠p...");
    await login(req, res);

    // ƒê√≥ng k·∫øt n·ªëi MongoDB sau khi ki·ªÉm tra
    mongoose.connection.close();
  })
  .catch((err) => console.error("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", err));
